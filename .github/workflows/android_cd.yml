name: Orbit CD

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    cd:
        name: Continuous Deployment
        runs-on: ubuntu-latest

        steps:
            # 1. Code Checkout
            - name: Checkout code
              uses: actions/checkout@v4

            # 2. Gradle Cache
            - name: Cache Gradle dependencies
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            # 3. JDK 17
            - name: Set up JDK 17
              uses: actions/setup-java@v4
              with:
                  java-version: 17
                  distribution: 'corretto'
                  cache: gradle

            # 4. Grant Execute Permission
            - name: Change gradlew permissions
              run: chmod +x gradlew

            # 5. Install Firebase CLI
            - name: Install Firebase CLI
              run: curl -sL https://firebase.tools | bash

            # 6. Decode google-services.json
            - name: Decode google-services.json
              env:
                  FIREBASE_SECRET: ${{ secrets.FIREBASE_SECRET }}
              run: echo $FIREBASE_SECRET | base64 --decode > app/google-services.json

            # 7. local.properties
            - name: Add local.properties
              env:
                  BASE_URL: ${{ secrets.BASE_URL }}
              run: |
                  echo "base.url=\"$BASE_URL\"" >> app/local.properties

            # 8. Ktlint
            - name: Run Ktlint Check
              run: ./gradlew ktlintCheck --stacktrace

            # 9. Test Build
            - name: Run Unit Tests
              run: ./gradlew test --stacktrace

            # 10. Release APK Build
            - name: Build Release APK
              run: ./gradlew assembleRelease --stacktrace

            # 11. Upload APK to Firebase App Distribution
            - name: Upload APK to Firebase App Distribution
              env:
                  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
                  FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
              run: |
                  firebase appdistribution:distribute app/build/outputs/apk/release/app-release.apk \
                  --app "$FIREBASE_APP_ID" \
                  --release-notes "🚀 새로운 데모 버전이 배포되었습니다!" \
                  --groups "internal-testers"

            # 12. Notify Discord
            - name: Notify Discord
              env:
                  DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
              run: |
                  curl -H "Content-Type: application/json" \
                  -X POST \
                  -d '{"content": "🚀 새로운 데모 버전이 Firebase App Distribution에 업로드되었습니다!\nAPK 다운로드: https://appdistribution.firebase.google.com"}' \
                  $DISCORD_WEBHOOK_URL
